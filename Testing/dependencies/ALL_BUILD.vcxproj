<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{307B617E-4696-3E85-B9BD-3BCF7A4A48DD}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>A:\NNImplementation\NN\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>A:\NNImplementation\NN\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>A:\NNImplementation\NN\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>A:\NNImplementation\NN\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="A:\NNImplementation\NN\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule A:/NNImplementation/NN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SA:/NNImplementation/Testing -BA:/NNImplementation/Testing/build --check-stamp-file A:/NNImplementation/Testing/dependencies/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">A:\NNImplementation\NN\src\kernels\cachedconvkernel.cl;A:\NNImplementation\NN\src\kernels\convkernel.cl;A:\NNImplementation\NN\src\kernels\fckernel.cl;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfigVersion.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets.cmake;A:\NNImplementation\Testing\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">A:\NNImplementation\Testing\dependencies\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule A:/NNImplementation/NN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SA:/NNImplementation/Testing -BA:/NNImplementation/Testing/build --check-stamp-file A:/NNImplementation/Testing/dependencies/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">A:\NNImplementation\NN\src\kernels\cachedconvkernel.cl;A:\NNImplementation\NN\src\kernels\convkernel.cl;A:\NNImplementation\NN\src\kernels\fckernel.cl;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfigVersion.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets.cmake;A:\NNImplementation\Testing\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">A:\NNImplementation\Testing\dependencies\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule A:/NNImplementation/NN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SA:/NNImplementation/Testing -BA:/NNImplementation/Testing/build --check-stamp-file A:/NNImplementation/Testing/dependencies/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">A:\NNImplementation\NN\src\kernels\cachedconvkernel.cl;A:\NNImplementation\NN\src\kernels\convkernel.cl;A:\NNImplementation\NN\src\kernels\fckernel.cl;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfigVersion.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets.cmake;A:\NNImplementation\Testing\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">A:\NNImplementation\Testing\dependencies\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule A:/NNImplementation/NN/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SA:/NNImplementation/Testing -BA:/NNImplementation/Testing/build --check-stamp-file A:/NNImplementation/Testing/dependencies/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">A:\NNImplementation\NN\src\kernels\cachedconvkernel.cl;A:\NNImplementation\NN\src\kernels\convkernel.cl;A:\NNImplementation\NN\src\kernels\fckernel.cl;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCL\OpenCLConfigVersion.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeaders\OpenCLHeadersTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLHeadersCpp\OpenCLHeadersCppTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLICDLoader\OpenCLICDLoaderTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtils\OpenCLUtilsTargets.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppConfig.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets-debug.cmake;A:\NNImplementation\NN\vendor\OpenCL-SDK\install\share\cmake\OpenCLUtilsCpp\OpenCLUtilsCppTargets.cmake;A:\NNImplementation\Testing\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">A:\NNImplementation\Testing\dependencies\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="A:\NNImplementation\Testing\build\ZERO_CHECK.vcxproj">
      <Project>{7775BE34-3A6D-391A-8C8B-2286163EC555}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="A:\NNImplementation\Testing\dependencies\BakrNN.vcxproj">
      <Project>{B3A7193D-74E3-399B-A13C-17D3711B3334}</Project>
      <Name>BakrNN</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>